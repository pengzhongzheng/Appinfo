<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd">


    <!--扫描包-->
    <context:component-scan base-package="com.peng.service"/>
    <context:component-scan base-package="com.peng.dao"/>

    <!--，自动帮助你完成声明，并且还自动搜索@Component , @Controller , @Service , @Repository等标注的类。
    <context:annotation-config/>-->


    <context:property-placeholder location="classpath:database.properties"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" scope="singleton">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${user}"/>
        <property name="password" value="${password}"/>
        <property name="initialSize" value="${initialSize}"/>
        <property name="maxActive" value="${maxActive}"/>
        <property name="maxIdle" value="${maxIdle}"/>
        <property name="minIdle" value="${minIdle}"/>
        <property name="maxWait" value="${maxWait}"/>
        <property name="removeAbandoned" value="${removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
        <property name= "testWhileIdle" value="true"/>
        <property name= "timeBetweenEvictionRunsMillis" value="60000"/>
        <property name= "testOnBorrow" value="false"/>
        <property name= "testOnReturn" value="false"/>
        <property name= "validationQuery" value="select 1"/>
        <property name= "numTestsPerEvictionRun" value="${maxActive}"/>
    </bean>

    <!--事务管理 -->
    <bean id="txtManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!--配置SqlSessionFactoryBean-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!--事务配置-->
    <tx:advice id="interceptor" transaction-manager="txtManager">
        <tx:attributes>
            <tx:method name="find*" propagation="SUPPORTS" rollback-for="Exception" />
            <tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="upd*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
        </tx:attributes>
    </tx:advice>

    <!--AOP 配置-->
    <aop:aspectj-autoproxy/>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="transaction" expression="execution(* *cn.peng.service..*(..))"/>
        <aop:advisor advice-ref="interceptor" pointcut-ref="transaction"/>
    </aop:config>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.peng.dao"/>
    </bean>


</beans>